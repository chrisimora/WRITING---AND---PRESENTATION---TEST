# Day 1

# Unix Command Line dan Git

Biasanya kita mengakses *file* sistem dengan membuka aplikasi berbasis GUI yang dinamakan **File Explorer** jika kamu menggunakan sistem operasi Windows. Ternyata ada cara lain untuk mengakses *file* sistem tersebut yaitu dengan command-line interface (CLI), dengan CLI kita bisa mengakses file sistem hanya dengan mengetikkan perintah atau teks

## Apa itu CLI dan Shell

- Shell adalah program yang digunakan untuk berkomunikasi atau memerintah sistem
- CLI adalah jenis shell yang berbasis teks

## Penggunaan Git Bash

- Unduh Git Bash melalui tautan [berikut ini](https://git-scm.com/downloads)
- Kemudian instal di PC kamu

## Perintah untuk Git Bash

### Perintah Navigasi

- pwd, digunakan untuk melihat *current working directory*
- ls, digunakan untuk melihat daftar *file* yang ada di sebuah direktori
- cd <direktori>, digunakan untuk berpindah direktori

### Perintah Membuat *File* & Direktori

- touch, digunakan untuk membuat sebuah *file*
- mkdir, digunakan untuk membuat sebuah direktori

### Perintah Melihat Isi *File*

- head, digunakan untuk melihat beberapa *line* awal dari sebuah *file* teks
- tail, digunakan untuk melihat beberapa *line* akhir dari sebuah *file* teks
- cat, digunakan untuk melihat isi sebuah *file*

### Perintah Menyalin, Memindahkan, dan Menghapus File & Direktori

- cp, digunakan untuk menyalin *file* atau direktori
- mv, digunakan untuk memindahkan *file* atau direktori, bisa digunakan untuk *rename*
- rm, digunakan untuk menghapus file atau direktori

## Apa itu Git

- Git adalah perangkat lunak *open-source* yang digunakan sebagai *version control* (kontrol versi)
- Git dapat  melacak perubahan dalam sekumpulan *file* oleh karena itu Git banyak digunakan oleh *programmer* untuk berkolaborasi dalam mengembangkan perangkat lunak
- Git ditemukan pada 2005 oleh [Linus Torvalds](https://en.wikipedia.org/wiki/Linus_Torvalds)
- Dalam Git, kita akan mengenal repositori atau sering disingkat repo. Repo adalah sebuah folder yang bersisi *source code* (kode sumber)
- Terdapat 4 fundamental dalam Git Workflow
    - *Working Directory*
    - *Staging Area*
    - *Local Repository*
    - *Remote Repository*
- Jika melihat sebuah *file* dalam w*orking directory*, *file* tersebut bisa berada dalam tiga kemungkinan
    - File tersebut bisa di-*staged*, yang berarti *file* yang memiliki perubahan, ditandai untuk di-*commit* ke *local repository* (repositori lokal) tetapi belum di-*commit*.
    - File tersebut bisa dimodifikasi, yang berarti *file* memiliki perubahan belum disimpan di repositori lokal.
    - Filter di-*commit, y*ang berarti bahwa perubahan yang dibuat pada *file* tersebut disimpan dengan aman di *local repository* (repositori lokal).

## Perintah Pada Git

- git config, digunakan untuk mengatur nama penulis dan alamat email untuk digunakan dengan komit.
- git init, digunakan untuk memulai repositori baru.
- git add, digunakan untuk menambahkan file yang ada di *working directory* ke *staging area*
- git commit, digunakan untuk menambahkan semua file yang di-*staged* ke *local repository* (repositori lokal).
- git push, digunakan untuk menambahkan semua file yang di-*commit* di repositori lokal ke *remote repository*. Sehingga di *remote repository*, semua *file* dan perubahannya akan terlihat oleh siapa saja yang memiliki akses ke *remote repository* tersebut.
- git fetch, digunakan untuk mendapatkan *file* dari *remote repository* ke repositori lokal, tetapi tidak ke dalam *working directory*.
- git merge, digunakan menggabungkan *branch* lain ke dalam *branch* saat ini.
- git pull, digunakan untuk mendapatkan *file* dari *remote repository* langsung ke *working directory*
- git remote, digunakan untuk menghubungkan *local repository* (repositori lokal) dengan *remote repository*
- git status, digunakan untuk menampilkan semua *file* yang harus di-*commit*
- git log, digunakan melihat histori perubahan yang telah dilakukan, jadi semua *commit* akan tampil di sini

## Sekian dan Terima Kasih

# Day 2
# Hypertext Markup Language (HTML)

## Apa itu HTML

- Sederhananya, HTML adalah sebuah bahasa yang digunakan untuk membuat konten dan struktur dari halaman sebuah situs web
- Versi pertama HTML ditulis oleh [Tim Berners-Lee](https://en.wikipedia.org/wiki/Tim_Berners-Lee) pada tahun 1993
- Versi terbaru HTML saat ini adalah HTML5. Versi ini merupakan versi yang direkomendasikan oleh World Wide Web Consortium (W3C)
- HTML5 pertama kali dirilis dalam ke publik pada tanggal 22 Januari 2008

## *Tools* yang harus dipersiapkan untuk membuat HTML

- Peramban Web (*Web Browser*), peramban web digunakan untuk menampilkan konten HTML
    - [Chrome](https://www.google.com/chrome/)
    - [Microsoft Edge](https://www.microsoft.com/en-us/edge)
    - [Firefox](https://www.mozilla.org/en-US/firefox/new/)
    - [Opera](https://www.opera.com/browsers/opera)
    - [Brave](https://brave.com/)
- *Text Editor*, text editor digunakan untuk menulis atau mengetikkan kode HTML
    - [Visual Studio Code](https://code.visualstudio.com/download), dikembangkan oleh Microsoft
    - [Sublime Text](https://www.sublimetext.com/)
    - [Atom](https://atom.io/), dikembangkan oleh GitHub
    - [Bracket](https://brackets.io/), dikembangkan oleh Adobe
    - [Notepad++](https://notepad-plus-plus.org/downloads/)

## Struktur HTML

```html
<!DOCTYPE html>
<html>
<head>
	<title>Judu Halaman/title>
</head>
<body>
	<h1>Judul Teks</h1>
	<p>Isi Paragraf</p>
</body>
</html>
```

- <!DOCTYPE html> menyatakan bahwa kode HTML yang dibuat menggunakan versi HTML5
- < html > menyatakan elemen akar dari halaman HTML
- < head > berisi informasi meta tentang halaman HTML
- < title > digunakan untuk membuat judul halaman HTML
- < body > menyatakan badan HTML, dan merupakan wadah untuk semua konten yang terlihat, seperti judul, paragraf, gambar, *hyperlink*, tabel, *list*, dan lain-lain.
- < h1 > digunakan membuat judul besar
- < p > digunakan untuk menyatakan paragraf

## Elemen HTML

Elemen HTML terdiri dari *tag* pembuka, kontennya, dan *tag* penutup.

```html
<tagname> Isi konten </tagname>
```

Contoh Elemen HTML

```html
<h1> Judul Besar </h1>
<p> Ini adalah paragraf </p>
```

## Atribut HTML

Atribut merupakan properti dari sebuah elemen HTML

```html
<tagname attribute="value"> Isi konten </tagname>
```

- Semua elemen HTML bisa memiliki atribut
- Atribut selalu diletakkan pada *tag* pembuka sebuah elemen
- Semua atribut yang bisa dipakai untuk elemen HTML bisa dilihat melalui [tautan](https://www.w3schools.com/tags/ref_attributes.asp) berikut ini

Contoh Atribut HTML

```html
<a href="google.com">Klik di sini untuk membuka Google </a>
```

## Komentar pada HTML

- Komentar adalah sebuah teks yang tidak akan tampil pada peramban web (*web browser*).
- Komentar digunakan untuk memberikan penjelasan lebih lengkap tentang kode HTML yang ditulis
    
    ```html
    <!-- Ketikkan komentar di sini -->
    ```
    
    > Perhatikan bahwa terdapat tanda seru (!) pada *tag* pembuka, tetapi tidak ada pada *tag* penutup.
    > 
    
    Contoh 
    
    ```html
    <!-- Ini adalah komentar. Komentar tidak akan tampil di peramban web (*web browser*) -->
    ```
    

## Ekstensi Live Server pada Visual Studio Code

- Setiap kita menuliskan kode HTML, kita harus me-*refresh* halaman web tersebut di peramban web (*web browser*) untuk menampilkan kode yang telah dibuat. Hal tersebut akan sangat merepotkan karena harus berulang kali me-*refresh* halamannya
- Solusi dari permasalahan tersebut adalah dengan menginstal ekstensi yang bernama **Live Server** pada Visual Studio Code
- Ekstensi Live Server memiliki fitur *live reload* yang memungkinkan kita untuk tidak berulang kali me-*refresh* halaman web

## *Tag* HTML Populer

- < p >, digunakan untuk membuat paragraf
- < h1 > - < h6 >, digunakan untuk membuat judul besar
- < i > atau < em >, digunakan untuk membuat teks miring
- < b > atau < strong >, digunakan untuk menebalkan teks
- < a >, digunakan untuk membuat *hyperlink*
- < hr >, digunakan untuk membuat garis pemisah horizontal
- < img >, digunakan untuk memanggil gambar
- < video >, digunakan untuk memanggil video
- < table >, digunakan untuk membuat tabel
- < form >, digunakan untuk membuat form

## Elemen Semantik pada HTML

- Elemen semantik adalah elemen yang memiliki arti.
- Terdapat beberapa *tag* semantik yang dapat digunakan untuk mendefinisikan bagian yang berbeda dari halaman web
    - < article >
    - < aside >
    - < details >
    - < figcaption >
    - < figure >
    - < footer >
    - < header >
    - < main >
    - < mark >
    - < nav >
    - < section >
    - < summary >
    - < time >
- Kegunaan menggunakan elemen semantik adalah meningkatkan aksesibilitas, meningkatkan SEO, serta lebih mudah di-*maintain*

## Deploy HTML

- Deploy adalah sebuah proses untuk menyebarkan atau mengunggah kode ke web server agak bisa di akses oleh banyak orang
- Kode HTML bisa disebarkan atau diunggah melalui layanan berikut
    - Netlify
    - GitHub Pages
    - Firebase
    - Microsoft Azure

## Sekian dan Terima kasih
